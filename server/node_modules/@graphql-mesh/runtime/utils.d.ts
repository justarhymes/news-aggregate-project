import { GraphQLOperation } from './types';
import { DocumentNode } from 'graphql';
import { MeshHandlerLibrary, KeyValueCache, YamlConfig, MergerFn } from '@graphql-mesh/types';
import { IResolvers } from '@graphql-tools/utils';
export declare function getPackage<T>(name: string, type: string): Promise<T>;
export declare function getHandler(name: string): Promise<MeshHandlerLibrary>;
export declare function resolveAdditionalTypeDefs(baseDir: string, additionalTypeDefs: string): Promise<DocumentNode[]>;
export declare function resolveAdditionalResolvers(baseDir: string, additionalResolvers: (string | YamlConfig.AdditionalResolverObject)[]): Promise<IResolvers>;
export declare function ensureDocumentNode(document: GraphQLOperation): DocumentNode;
export declare function resolveCache(cacheConfig?: YamlConfig.Config['cache']): Promise<KeyValueCache | undefined>;
export declare function resolveMerger(mergerConfig?: YamlConfig.Config['merger']): Promise<MergerFn>;
